// Generated by CoffeeScript 1.9.0

/*!
 * @license popup
 * (c) sugarshin
 * License: MIT
 */

(function() {
  "use strict";
  var __hasProp = {}.hasOwnProperty;

  (function(root, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
      module.exports = factory(require('object-assign'));
    } else {
      root.Popup || (root.Popup = factory());
    }
  })(this, function(objectAssign) {
    var Popup;
    if (objectAssign === void 0) {
      objectAssign = function(out) {
        var i, key, val, _i, _ref, _ref1;
        out || (out = {});
        for (i = _i = 1, _ref = arguments.length; 1 <= _ref ? _i < _ref : _i > _ref; i = 1 <= _ref ? ++_i : --_i) {
          if (!arguments[i]) {
            continue;
          }
          _ref1 = arguments[i];
          for (key in _ref1) {
            if (!__hasProp.call(_ref1, key)) continue;
            val = _ref1[key];
            out[key] = val;
          }
        }
        return out;
      };
    }
    return Popup = (function() {
      Popup.prototype._defaults = {
        width: 640,
        height: 800,
        url: null,
        name: 'popup'
      };

      Popup.prototype.setURL = function() {
        var url;
        if ((url = this.el.getAttribute('href')) != null) {
          return this._url = url;
        } else {
          return this._url = this.opts.url;
        }
      };

      Popup.prototype.setParam = function() {
        var h, height, w, width, x, y;
        if ((w = this.el.getAttribute('data-popup-width')) != null) {
          width = w;
        } else {
          width = this.opts.width;
        }
        if ((h = this.el.getAttribute('data-popup-heigt')) != null) {
          height = h;
        } else {
          height = this.opts.height;
        }
        x = (window.screen.width - width) / 2;
        y = (window.screen.height - height) / 2;
        return this._param = "screenX=" + x + ",screenY=" + y + ",left=" + x + ",top=" + y + ",width=" + width + ",height=" + height + ",toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=yes";
      };

      function Popup(_at_el, opts) {
        this.el = _at_el;
        this.opts = objectAssign({}, this._defaults, opts);
        this.setURL();
        this.setParam();
      }

      Popup.prototype.open = function() {
        window.open(this._url, this.opts.name, this._param);
        return this;
      };

      Popup.open = function(el) {
        var popup;
        popup = new Popup(el);
        return popup.open();
      };

      return Popup;

    })();
  });

}).call(this);
