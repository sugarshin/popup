// Generated by CoffeeScript 1.9.0

/*!
 * @license popup
 * (c) sugarshin
 * License: MIT
 */

(function() {
  "use strict";
  (function(root, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
      module.exports = factory();
    } else {
      root.Popup || (root.Popup = factory());
    }
  })(this, function() {
    var Popup;
    return Popup = (function() {
      var addEvent, removeEvent;

      addEvent = (function() {
        if (window.addEventListener) {
          return function(el, eventName, handler, useCapture) {
            if (useCapture == null) {
              useCapture = false;
            }
            return el.addEventListener(eventName, handler, useCapture);
          };
        } else {
          return function(el, eventName, handler) {
            return el.attachEvent("on" + eventName, function() {
              return handler.call(el);
            });
          };
        }
      })();

      removeEvent = (function() {
        if (window.removeEventListener) {
          return function(el, eventName, handler, useCapture) {
            if (useCapture == null) {
              useCapture = false;
            }
            return el.removeEventListener(eventName, handler, useCapture);
          };
        } else {
          return function(el, eventName, handler) {
            return el.detachEvent("on" + eventName, handler);
          };
        }
      })();

      Popup.prototype._defaults = {
        width: 640,
        height: 800,
        url: null,
        nameSuffix: '-popup'
      };

      Popup.prototype.setURL = function() {
        var url;
        if ((url = this.el.getAttribute('href')) != null) {
          return this._url = url;
        } else {
          return this._url = this.opts.url;
        }
      };

      Popup.prototype.setName = function() {
        return this._name = "" + window.name + this.opts.nameSuffix;
      };

      Popup.prototype.setParam = function() {
        var h, height, w, width, x, y;
        if ((w = this.el.getAttribute('data-popup-width')) != null) {
          width = w;
        } else {
          width = this.opts.width;
        }
        if ((h = this.el.getAttribute('data-popup-heigt')) != null) {
          height = h;
        } else {
          height = this.opts.height;
        }
        x = (window.screen.width - width) / 2;
        y = (window.screen.height - height) / 2;
        return this._param = "screenX=" + x + ",screenY=" + y + ",left=" + x + ",top=" + y + ",width=" + width + ",height=" + height + ",toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=yes";
      };

      Popup.prototype._configure = function(opts) {
        this.opts = opts || {};
        this.opts.width = this.opts.width || this._defaults.width;
        this.opts.height = this.opts.height || this._defaults.height;
        this.opts.url = this.opts.url || this._defaults.url;
        return this.opts.nameSuffix = this.opts.nameSuffix || this._defaults.nameSuffix;
      };

      function Popup(_at_el, opts) {
        this.el = _at_el;
        this._configure(opts);
        this.setURL();
        this.setName();
        this.setParam();
        this.events();
      }

      Popup.prototype.open = function() {
        window.open(this._url, this.opts.name, this._param);
        return this;
      };

      Popup.prototype.events = function() {
        return addEvent(this.el, 'click', (function(_this) {
          return function(ev) {
            if (typeof ev.preventDefault === "function") {
              ev.preventDefault();
            }
            return _this.open();
          };
        })(this));
      };

      Popup.open = function(el) {
        if (el == null) {
          return;
        }
        return new Popup(el).open();
      };

      return Popup;

    })();
  });

}).call(this);
